filter {
  # zimbra mailbox.log
  if [type] == "zimbra" {
    grok {
      patterns_dir => "/etc/logstash/patterns"
      match => { "message" => "%{ZIMBRA_MAILBOX_LOG}" }
    }
    date {
      match => [ "zimbra_timestamp", "YYYY-MM-dd HH:mm:ss,SSS", "ISO8601" ]
	  timezone => "UTC"
    }
    mutate {
      replace => { "zimbra_timestamp" => "%{@timestamp}" }
    }
    # for check grok data type conversion bug???
    mutate {
      convert => {
        "zimbra_thread_number" => "integer"
      }
    }
    if [zimbra_account] {
      kv {
        source => "zimbra_account"
        include_keys => [ "ip", "oip", "id", "name", "aid", "aname", "cid", "mid", "ua", "via", "msgid", "item", "ds", "port" ]
        field_split => ";"
        prefix => "zimbra_account_"
        remove_field => [ "zimbra_account" ]
      }
      mutate {
        convert => {
          "zimbra_account_id" => "integer"
          "zimbra_account_aid" => "integer"
          "zimbra_account_cid" => "integer"
          "zimbra_account_mid" => "integer"
          "zimbra_account_port" => "integer"
        }
      }
    }
    if [zimbra_account_ip] {
      # testing private plugin : https://github.com/nxhack/logstash-filter-geoasn/tree/GeoIP_Legacy
      #geoasn {
      #  database => "/etc/logstash/GeoIPASNum.dat"
      #  source => "zimbra_account_ip"
      #  target => "zimbra_bgp"
      #}
      geoip {
		add_tag => [ "geoip" ]
		source => "zimbra_account_ip"
        target => "geoip"
        database => "/etc/logstash/GeoLiteCity.dat"
		add_field => [ "[geoip][coordinates]", "%{[geoip][longitude]}" ]
        add_field => [ "[geoip][coordinates]", "%{[geoip][latitude]}"  ]
        }
		mutate {
			convert => [ "[geoip][coordinates]", "float"]
		}
		if ("_grokparsefailure" in [tags]) {
            mutate {
                add_tag => [ "geoip_parsefailure" ]
                remove_tag => [ "_grokparsefailure" ]
            }
        }
      # CTL NY1 US East : New York
      #if [zimbra_account_ip] =~ /^10\.73\./ {
      #  mutate { replace      => { "[zimbra_geoip][timezone]"         => "America/New_York" } }
      #  mutate { replace      => { "[zimbra_geoip][country_name]"     => "United States" } }
      #  mutate { replace      => { "[zimbra_geoip][country_code2]"    => "US" } }
      #  mutate { replace      => { "[zimbra_geoip][country_code3]"    => "USA" } }
      #  mutate { replace      => { "[zimbra_geoip][area_code]"        => "703" } }
      #  mutate { convert      => { "[zimbra_geoip][area_code]"        => "integer" } }
      #  mutate { replace      => { "[zimbra_geoip][city_name]"        => "Ashburn" } }
      #  mutate { replace      => { "[zimbra_geoip][continent_code]"   => "NA" } }
      #  mutate { replace      => { "[zimbra_geoip][dma_code]"         => "511" } }
      #  mutate { convert      => { "[zimbra_geoip][dma_code]"         => "integer" } }
      #  mutate { replace      => { "[zimbra_geoip][ip]"               => "%{zimbra_account_ip}" } }
      #  mutate { replace      => { "[zimbra_geoip][postal_code]"      => "20147" } }
      #  mutate { replace      => { "[zimbra_geoip][real_region_name]" => "Virginia" } }
      #  mutate { replace      => { "[zimbra_geoip][region_name]"      => "VA" } }
      #  mutate { replace      => { "[zimbra_geoip][latitude]"         => "39.044" } }
      #  mutate { convert      => { "[zimbra_geoip][latitude]"         => "float" } }
      #  mutate { replace      => { "[zimbra_geoip][longitude]"        => "-77.4875" } }
      #  mutate { convert      => { "[zimbra_geoip][longitude]"        => "float" } }
      #  mutate { replace      => { "[zimbra_geoip][location]"         => "-77.4875, 39.044" } }
      #}
      #mutate {
      #  add_field => { "zimbra_account_hostname" => "%{zimbra_account_ip}" }
      #}
      #dns {
      #  reverse => [ "zimbra_account_hostname" ]
      #  action => "replace"
      #}
    }
    if [zimbra_account_oip] {
      # testing private plugin : https://github.com/nxhack/logstash-filter-geoasn/tree/GeoIP_Legacy
      #geoasn {
      #  database => "/etc/logstash/GeoIPASNum.dat"
      #  source => "zimbra_account_oip"
      #  target => "zimbra_origin_bgp"
      #}
      geoip {
        add_tag => [ "geoip" ]
        source => "zimbra_account_oip"
        target => "geoip"
		database => "/etc/logstash/GeoLiteCity.dat"
		add_field => [ "[geoip][coordinates]", "%{[geoip][longitude]}" ]
        add_field => [ "[geoip][coordinates]", "%{[geoip][latitude]}"  ]
        }
		mutate {
			convert => [ "[geoip][coordinates]", "float"]
		}
		if ("_grokparsefailure" in [tags]) {
            mutate {
                add_tag => [ "geoip_parsefailure" ]
                remove_tag => [ "_grokparsefailure" ]
            }
        }
      # CTL NY1 US East : New York
      #if [zimbra_account_ip] =~ /^10\.73\./ {
      #  mutate { replace      => { "[zimbra_geoip][timezone]"         => "America/New_York" } }
      #  mutate { replace      => { "[zimbra_geoip][country_name]"     => "United States" } }
      #  mutate { replace      => { "[zimbra_geoip][country_code2]"    => "US" } }
      #  mutate { replace      => { "[zimbra_geoip][country_code3]"    => "USA" } }
      #  mutate { replace      => { "[zimbra_geoip][area_code]"        => "703" } }
      #  mutate { convert      => { "[zimbra_geoip][area_code]"        => "integer" } }
      #  mutate { replace      => { "[zimbra_geoip][city_name]"        => "Ashburn" } }
      #  mutate { replace      => { "[zimbra_geoip][continent_code]"   => "NA" } }
      #  mutate { replace      => { "[zimbra_geoip][dma_code]"         => "511" } }
      #  mutate { convert      => { "[zimbra_geoip][dma_code]"         => "integer" } }
      #  mutate { replace      => { "[zimbra_geoip][ip]"               => "%{zimbra_account_ip}" } }
      #  mutate { replace      => { "[zimbra_geoip][postal_code]"      => "20147" } }
      #  mutate { replace      => { "[zimbra_geoip][real_region_name]" => "Virginia" } }
      #  mutate { replace      => { "[zimbra_geoip][region_name]"      => "VA" } }
      #  mutate { replace      => { "[zimbra_geoip][latitude]"         => "39.044" } }
      #  mutate { convert      => { "[zimbra_geoip][latitude]"         => "float" } }
      #  mutate { replace      => { "[zimbra_geoip][longitude]"        => "-77.4875" } }
      #  mutate { convert      => { "[zimbra_geoip][longitude]"        => "float" } }
      #  mutate { replace      => { "[zimbra_geoip][location]"         => "-77.4875, 39.044" } }
      #}
      #mutate {
      #  add_field => { "zimbra_account_origin_hostname" => "%{zimbra_account_oip}" }
      #}
      #dns {
      #  reverse => [ "zimbra_account_origin_hostname" ]
      #  action => "replace"
      #}
    }
    if [zimbra_trace_log] {
      mutate {
        add_field => { "zimbra_component" => "JAVA-Exception" }
      }
    }
  }
}